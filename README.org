* mito-auth-jzon

This library basically brings together mito-auth and jzon-util to avoid json encoding the password slots from =has-secure-password=.
* Getting The Code

The code currently lives in [[https://github.com/daninus14/mito-auth-jzon][GitHub]]

* Basic Usage

Here's a simple example

#+BEGIN_SRC common-lisp
  (defclass c1 (mito-auth-jzon:has-secure-password)
    ((name :accessor name :initargs :name :initform NIL :col-type (or :null :text))
     (secret :initargs :secret :col-type (or :null :text) :sensitive t))
    (:metaclass mito-auth-jzon:mito-auth-jzon-metaclass))

  CL-USER> (make-instance 'c1 :name "john" :password "robert")
  #<C1 {1003AB7A73}>
  CL-USER> (inspect *)

  The object is a STANDARD-OBJECT of type C1.
  0. PASSWORD-HASH: "32c24df75ca9780f297fb39d2e63792802cb0143dd3f344da200f8dc614f5ffd"
  1. PASSWORD-SALT: #(27 15 5 5 218 252 44 59 194 209 15 215 93 13 154 200 94 155
                      125 218)
  2. NAME: "john"
  > q
                                          ; No values
  CL-USER> (com.inuoe.jzon:stringify (make-instance 'c1 :name "john" :password "robert"))
  "{\"name\":\"john\"}"

  (make-instance 'c1 :name "john" :password "robert" :secret "42")
  CL-USER> (inspect *)

  The object is a STANDARD-OBJECT of type C1.
  0. PASSWORD-HASH: "6230941236ad8634f05c3763fa51d951aa45797395ee5ab7676edbfe1427f83f"
  1. PASSWORD-SALT: #(117 3 195 172 69 0 202 61 116 221 185 103 164 80 56 163 50
                      50 114 220)
  2. NAME: "john"
  3. SECRET: "42"

  CL-USER> (com.inuoe.jzon:stringify (make-instance 'c1 :name "john" :password "robert" :secret "42"))
"{\"name\":\"john\"}"
#+END_SRC

As you can see, the password related fields are not encoded.

They key ideas to keep in mind is that
1. We need to set the metaclass to be =mito-auth-jzon:mito-auth-jzon-metaclass=
2. Mark any slot you don't want to be displayed with =:sensitive t=

* Manual

For the usage of the authentication, please referer to the original project [[https://github.com/fukamachi/mito-auth][mito-auth]].

For detailed usage of the =sensitve= to avoid json encoding API see [[https://github.com/daninus14/jzon-util][jzon-util]].

* Dependencies

- [[https://github.com/daninus14/jzon-util][jzon-util]]
- ironclad
- babel
 
* Acknowledgements

All the mito-auth code was graciously contributed by Eitaro Fukamachi see [[https://github.com/fukamachi/mito-auth][mito-auth]].

Unfortunately, because of an issue with the image not allowing class reinitialization when changing the metaclass, we couldn't just redefine the =has-secure-password= class in =mito-auth=, and instead we had to copy all the code. All credit of mito-auth goes to Eitaro Fukamachi.

* Notes

If there are any updates to mito-auth that need to be added here, please open up an issue.
